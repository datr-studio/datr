% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/printf.R
\name{printf}
\alias{printf}
\title{A fancy print function}
\usage{
printf(string)
}
\arguments{
\item{string}{String to format}
}
\description{
\code{printf()} provides an easy way to print fancy output without needing to
splice up your string with different function calls.
}
\details{
\code{printf()} provides a simultaneous wrapper around both the \code{\link[glue]{glue}} and
\code{\link[crayon]{crayon}} libraries in a single string. This enables you to specify formtating (using crayons'
colour and emphasis functions) whilst also combining text with code to evaluation
(using glue).
}
\section{How to use printf}{

In short, use \verb{$$} to signal a call to the crayon library. Calls can be nested with
further single \code{$} symbols. Close the call with \verb{$$} (Optional for the final closing brace).

Meanwhile, anything inside of curly braces (e.g. \{ \}) is evaluated first, enabling you
to use variables, function calls, and basically anything you can do in short R code.
}

\examples{
var1 <- 1
var2 <- 2
var3 <- "world"
var4 <- "this example"

printf("{var1} added to {var2} equals {var1 + var2}")
printf("Hello $$strikethrough mum $$ world!")
printf("$$blue this example shows that `printf()` will auto close final braces")
printf("This example shows that you can $$cyan$bold combine $$ formating")
printf("$$magenta$italic {var4} $$ $$green$underline brings it $$ $$blurred all together")
}
