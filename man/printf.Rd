% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/printf.R
\name{printf}
\alias{printf}
\title{A fancy print function}
\usage{
printf(string, ...)
}
\arguments{
\item{string}{String to format.}

\item{...}{Additional arguments to pass on to glue.}
}
\description{
\code{printf()} is reminiscent of python's f-strings, where prefacing a string with \code{f} enables the user to evaluate code within braces before printing to the console. This functionality already exists in the glue package; so this is wrapper around that. However, what it also brings is an additional wrapper around the crayon package at the same time. You can therefore colour and evaluate print statements easily.
}
\details{
\subsection{How to use printf}{

In short, use \verb{$$} to signal a call to the crayon library. Calls can be nested with further single \code{$} symbols. Close the call with \verb{$$x} (Optional for the final closing brace).
}
}
\examples{
var1 <- 1
var2 <- 2
var3 <- "world"
var4 <- "this example"


printf("{var1} added to {var2} equals {var1 + var2}")
printf("Hello $$strikethrough mum $$x world!")
printf("$$blue this example shows that `printf()` will auto close final braces")
printf("This example shows that you can $$cyan$bold combine $$x formating")
printf("$$magenta$italic {var4} $$x $$green$underline brings it $$x $$blurred all together")
}
